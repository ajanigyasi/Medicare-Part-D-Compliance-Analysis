{
    "collab_server" : "",
    "contents" : "require(RCurl)\n\ndiseaseData <- read.csv(text = getURL(\"https://raw.githubusercontent.com/dariodata/medicare-drug-cost/master/data/drug-disease_keys.csv\"))\ndrugData <- read.csv(text = getURL(\"https://raw.githubusercontent.com/dariodata/medicare-drug-cost/master/data/medicare_data_disease.csv\"))\n\nlibrary(dplyr)\nlibrary(tidyr)\nlibrary(plyr)\nlibrary(ggplot2)\n\ndata <- drugData[drugData$Year == 2015,]\n\nspend_2015 <- data %>%\n  group_by(Indication) %>%\n  summarize(Total.Spending = sum(Total.Spending, na.rm = TRUE), \n            Claim.Count = sum(Claim.Count, na.rm = TRUE), \n            Beneficiary.Count = sum(Beneficiary.Count, na.rm = TRUE)) %>%\n  mutate(Claim.Count = Claim.Count/10000) %>%\n  arrange(desc(Total.Spending, Claim.Count, Beneficiary.Count))\n\nsc <-  theme(legend.position = \"none\")\n\n##\nqplot(Beneficiary.Count, Total.Spending, data = spend_2015, geom = \"point\", size = Claim.Count, color = Indication) +\n  sc + geom_text(aes(label=Indication), hjust=0, vjust=0) +\n  scale_x_continuous(breaks = seq(0, 3.3e7, 0.5e7), limits = c(0, 3.3e7)) +\n  scale_y_continuous(breaks = seq(0, 2e10, 0.5e10), limits = c(0, 2e10)) + ggtitle(\"Top 100 Medicare Part D Indications in 2015\")\n\ndrugSpend_2015 <- data %>%\n  group_by(Brand.Name) %>%\n  summarize(Total.Spending = sum(Total.Spending, na.rm = TRUE)) %>%\n  arrange(desc(Total.Spending))\n\n\n\ntop_10_spend <- drugSpend_2015[1:10,]\n\ndrugSpendOrder <- drugData[order(drugData$Total.Spending, decreasing = TRUE),]\n\n#Subset Top 100 Indications in 2015 via Total Spending\ntop_100 <- spend_2015[1:100,]\ntop <- top_100 %>%\n  mutate(Claim.Count = Claim.Count/10000)\n\n\n#Subset Top 10 Drugs of 2015\na <- subset(drugSpendOrder, Brand.Name %in% top_10_spend$Brand.Name)\n\n\npar(mfrow = c(1,2))\nggplot(data = a, aes(x = Year, y = Total.Spending, color = Brand.Name)) +\n  geom_point() + geom_line() + scale_y_continuous(breaks = seq(0, 8e9, 1e9), limits = c(0, 8e9)) +\n  ggtitle(\"Annual spending for top 10 drugs\")\n\nggplot(top, aes(x = Beneficiary.Count, y = Total.Spending, size = Claim.Count)) +\n  geom_point(aes(color = Indication), alpha = 0.75) + scale_size_continuous(range = c()) + \n  scale_x_continuous(breaks = seq(0, 3.90e7, 0.5e7), limits = c(0, 3.90e7)) +\n  scale_y_continuous(breaks = seq(0, 1e10, 0.5e10), limits = c(0, 1e10)) +\n  geom_text(aes(label=Indication), hjust=0, vjust=0) + \n  ggtitle(\"Top Indications in 2015\") + theme(legend.position = \"none\")\n\nindSpend <- drugData[, c(5,14,16)]\ndrugSpend <- drugData[,c(5,14,15)]\n\n#########Prune BRFSS for Diabetes behavioral traits and indicators\n\nfilename <- \"E:/CDC/LLCP2015XPT.zip\"\nif (!file.exists(\"LLCP2015.XPT\")) {\n  unzip(filename)\n}\n\n#turn off scientific notation\noptions(stringsAsFactors=F, scipen = 999)\n\npkg = 'Hmisc'\nif (!require(pkg, character.only = TRUE)) {\n  library(pkg, character.only = TRUE)\n}\n\n#write from brfss sas \nbrfss <- sasxport.get(\"LLCP2015.XPT\")\nwrite.csv(brfss, file = \"brfss2015.csv\")\n\n#read brfss \nbrfss <- read.csv(\"brfss2015.csv\", encoding = \"UTF-8\", stringsAsFactors = FALSE)\nbrfss <- brfss_4\nbrfss_1 <- brfss_2\nbrfss_2 <- brfss_3\nbrfss_4 <- brfss_3\n\n\nbrfss$income2 <- factor(brfss$income2, levels = c(1,2,3,4,5,6,7,8), \n                        labels = c(\"< 10k\"  ,\"10k - 15k\", \"15k-20k\" , \"20k-25k\",  \"25k-35k\", \"35k-50k\", \n                                   \"50k-75k\", \">75k\"))\nbrfss$income2[brfss$income2 == 77] <- NA\nbrfss$income2[brfss$income2 == 99] <- NA #79,505 NAs in income\n\nbrfss$x.race <- factor(brfss$x.race, levels = c(1,2,3,4,5,6,7,8),\n                                                labels = c('white', 'black', 'native american', 'asian', 'asian/pacific islander',\n                                                           'other', 'other/multiracial', 'hispanic'))\nbrfss$x.race[brfss$x.race == 9] <- NA #7,437 Nas in race/ethnicity categories\n\nbrfss$x.age65yr <- factor(brfss$x.age65yr, levels = c(1,2), labels = c('18-64', '65+'))\nbrfss$x.age65yr[brfss$x.age65yr == 3] <- NA #5,336 NAs in split 65 yr age categories\n\n#state <- brfss$x.state #states\n\n#brfss$x.ageg5yr <- factor(brfss$x.ageg5yr, levels = c(1,2,3,4,5,6,7,8,9,10,11,12,13), labels = c('18-24', '25-29','30-34', \n                                                                                                 #'35-39', '40-44', '45-49',\n                                                                                                 #'50-54', '55-59', '60-64',\n                                                                                                 #'65-69', '70-74', '75-79', '80 or older'))\n#brfss$x.age65yr[brfss_4$x.age65yr == 14] <- NA  #14-level age category (integer class works better for manipulation than factor class)\n\n\nbrfss$sex <- factor(brfss$sex, levels = c(1,2), labels = c('male','female')) #sex\n\nbrfss$marital <- factor(brfss$marital, levels = c(1,2,3,4,5,6), labels = c('married', 'divorced', 'widowed', \n                                                                           'separated','single',\n                                                                           'living together'))\nbrfss$marital[brfss$marital == 9] <- NA #marital status\n\nbrfss$educa <- factor(brfss$educa, levels = c(1,2,3,4,5,6), labels = c('none' , '1-8' , '9-11' ,\n                                                                       '12/ged','c1-3' , 'cg'))\nbrfss$educa[brfss$educa == 9] <- NA #highest grade completed\n\nbrfss$height3  <- as.numeric(brfss$height3)\nbrfss$height3[brfss$height3 == 7777] <- NA\nbrfss$height3[brfss$height3 == 9999] <- NA #height w/o shoes & 9,508 NAs\n\nbrfss$weight2  <- as.numeric(brfss$weight2)\nbrfss$weight2[brfss$weight2 == 7777] <- NA\nbrfss$weight2[brfss$weight2 == 9999] <- NA #weight (lbs) & 25,598 NAs\n\n\n\n\n\n\n\n\n\n\n\n\n\nbrfss$exerany2 <- factor(brfss$exerany2, levels = c(1,2), labels = c('yes',  'no'))\nbrfss$exerany2[brfss$exerany2 == 7] <- NA\nbrfss$exerany2[brfss$exerany2 == 9] <- NA #other than regular job, do you exercise any?\n\n\nexerOFT <- as.data.frame(as.matrix(brfss$exeroft1))\n\nmnthExer <- exerOFT %>%\n  filter(V1 >= 200) %>%\n  mutate(fitOft = as.numeric(substring(V1,2,3))/4) #convert monthly to weekly frequency\n\nwkExer <- exerOFT %>%\n  filter(V1 < 200) %>%\n  mutate(fitOft = as.numeric(substring(V1,2,3)))\n\nexerOFT$fitOft <- mnthExer$fitOft[match(exerOFT$V1, mnthExer$V1)]\n\ncolnames(exerOFT) <- c(\"compressed labels\", \"fitOft\")\n\nexerOFT$fitOft <- ifelse(is.na(exerOFT$fitOft), wkExer$fitOft[match(exerOFT$`compressed labels`, wkExer$V1)], \n                         mnthExer$fitOft[match(exerOFT$`compressed labels`, mnthExer$V1)]) \n\nexerOFT$fitOft[exerOFT$`compressed labels` == 777] <- NA  \nexerOFT$fitOft[exerOFT$`compressed labels` == 999] <- NA   \nbrfss$fitOft <- exerOFT$fitOft #how many times per week did you partake in your primary activity or excercise ? \n\n\n\nlongevity <- as.data.frame(as.matrix(brfss_1$exerhmm1)) #convert hours to minutes\n\nmins <- longevity %>%\n  filter(V1  > 60) %>%\n  mutate(longMins = (as.numeric(substring(V1, 1, 1))* 60) + as.numeric(substring(V1, 2, nchar(V1))))\n\nkeptMins <- longevity %>%\n  filter(V1 < 60) %>%\n  mutate(longMins = as.numeric(V1))\n\nlongevity$longMins <- mins$longMins[match(longevity$V1, mins$V1)]\ncolnames(longevity) <- c(\"compressed mins\", \"longMins\")\n\nlongevity$longMins <- ifelse(is.na(longevity$longMins), \n                             keptMins$longMins[match(longevity$`compressed mins`, keptMins$V1)], \n                             mins$longMins[match(longevity$`compressed mins`, mins$V1)])\n\nlongevity$longMins[longevity$`compressed mins` == 777] <- NA  \nlongevity$longMins[longevity$`compressed mins` == 999] <- NA \n\nbrfss$longMins <- longevity$longMins #how long do you usually keep at this primary exercise ?\n\n\n \nbrfss$exract11 <- factor(brfss$exract11, levels = c(1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,\n                                                    26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,\n                                                    48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,66,67,68,69,\n                                                    71,72,73,74,75,76,98), \n                         labels = c('interactive video games', 'aerobics', 'backpacking', 'badminton', 'basketball', \n                                    'bicycling machine','bicycling', 'boating', 'bowling', 'boxing' , 'calisthenics', \n                                    'canoeing/rowing competition', 'carpentry','dancing', 'elliptical', 'fishing' , 'frisbee',\n                                    'gardening', 'golf w/ cart', 'golf w/o cart', 'handball', 'hiking' , 'hockey', \n                                    'horseback riding', 'deer hunting', 'quail hunting', 'inline skating' , 'jogging', \n                                    'lacrosse','mountain climbing' , 'mowing lawn' , 'paddleball' , 'painting' , 'pilates', 'racquetball',\n                                    'raking lawn', 'running', 'rock climbing', 'rope skipping', 'rowing machine', 'rugby', \n                                    'scuba diving', 'skateboarding' , 'ice/roller skating' , 'sledding/tobagganing' , 'snorkeling', \n                                    'snow blowing', 'snow shoveling', 'snow skiiing', 'snowshoeing', 'soccer', \n                                    'softball/baseball', 'squash', 'stair master', 'stream fising', 'surfing', 'swimming', \n                                    'swimming in laps' , 'table tennis', 'tai chi', 'tennis' , 'touch football' ,\n                                    'volleyball', 'walking', 'waterskiing', 'weight lifting', 'wrestling', 'yoga' , \n                                    'childcare', 'farm work' , 'house cleaning/repair', 'karate/mma', 'wheelchair sports', \n                                    'yard work', 'other'))\n\nbrfss$exract11[brfss$exract11 == 77] <- NA\nbrfss$exract11[brfss$exract11 == 99] <- NA \n\n\n\n\nbrfss$exract21 <- factor(brfss$exract21, levels = c(1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,\n                                                        26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,\n                                                        48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,66,67,68,69,\n                                                        71,72,73,74,75,76,98), \n                           labels = c('interactive video games', 'aerobics', 'backpacking', 'badminton', 'basketball', \n                                      'bicycling machine','bicycling', 'boating', 'bowling', 'boxing' , 'calisthenics', \n                                      'canoeing/rowing competition', 'carpentry','dancing', 'elliptical', 'fishng' , 'frisbee',\n                                      'gardening', 'golf w/ cart', 'golf w/o cart', 'handball', 'hiking' , 'hockey', \n                                      'horseback riding', 'deer hunting', 'quail hunting', 'inline skating' , 'jogging', \n                                      'lacrosse','mountain climbing' , 'mowing lawn' , 'paddleball' , 'painting' , 'pilates', 'racquetball',\n                                      'raking lawn', 'running', 'rock climbing', 'rope skipping', 'rowing machine', 'rugby', \n                                      'scuba diving', 'skateboarding' , 'ice/roller skating' , 'sledding/tobagganing' , 'snorkeling', \n                                      'snow blowing', 'snow shoveling', 'snow skiiing', 'snowshoeing', 'soccer', \n                                      'softball/baseball', 'squash', 'stair master', 'stream fising', 'surfing', 'swimming', \n                                      'swimming in laps' , 'table tennis', 'tai chi', 'tennis' , 'touch football' ,\n                                      'volleyball', 'walking', 'waterskiing', 'weight lifting', 'wrestling', 'yoga' , \n                                      'childcare', 'farm work' , 'house cleaning/repair', 'karate/mma', 'wheelchair sports', \n                                      'yard work', 'other'))\n\nbrfss$exract21[brfss$exract21 == 77] <- NA\nbrfss$exract21[brfss$exract21 == 99] <- NA \n\nexerOFT2 <- as.data.frame(as.matrix(brfss$exeroft2))  #convert monthly to weekly frequency\n\nmnthExer2 <- exerOFT2 %>%\n  filter(V1 >= 200) %>%\n  mutate(fitOft2 = as.numeric(substring(V1,2,3))/4) \n\nwkExer2 <- exerOFT2 %>%\n  filter(V1 < 200) %>%\n  mutate(fitOft2 = as.numeric(substring(V1,2,3)))\n\nexerOFT2$fitOft2 <- mnthExer2$fitOft2[match(exerOFT2$V1, mnthExer2$V1)]\n\ncolnames(exerOFT2) <- c(\"compressed labels\", \"fitOft\")\n\nexerOFT2$fitOft2 <- ifelse(is.na(exerOFT2$fitOft), wkExer2$fitOft2[match(exerOFT2$`compressed labels`, wkExer2$V1)], \n                         mnthExer2$fitOft2[match(exerOFT2$`compressed labels`, mnthExer2$V1)]) \n\nexerOFT2$fitOft2[exerOFT2$`compressed labels` == 777] <- NA  \nexerOFT2$fitOft2[exerOFT2$`compressed labels` == 999] <- NA   \nbrfss$fitOft2 <- exerOFT2$fitOft2 #how many times per week did you partake in your secondary activity or excercise ? \n\n\n\nlongevity2 <- as.data.frame(as.matrix(brfss$exerhmm2)) #convert hours to minutes\n\nmins2 <- longevity2 %>%\n  filter(V1  > 60) %>%\n  mutate(longMins2 = (as.numeric(substring(V1, 1, 1))* 60) + as.numeric(substring(V1, 2, nchar(V1))))\n\nkeptMins2 <- longevity2 %>%\n  filter(V1 < 60) %>%\n  mutate(longMins2 = as.numeric(V1))\n\nlongevity2$longMins2 <- mins2$longMins2[match(longevity2$V1, mins2$V1)]\ncolnames(longevity2) <- c(\"compressed mins\", \"longMins\")\n\nlongevity2$longMins2 <- ifelse(is.na(longevity2$longMins2), \n                             keptMins2$longMins2[match(longevity2$`compressed mins`, keptMins2$V1)], \n                             mins2$longMins2[match(longevity2$`compressed mins`, mins2$V1)])\n\nlongevity2$longMins2[longevity2$`compressed mins` == 777] <- NA  \nlongevity2$longMins2[longevity2$`compressed mins` == 999] <- NA \n\nbrfss$longMins2 <- longevity2$longMins2 #how long do you usually keep at this secondary exercise ?\n\n\n#Weekly Freq of muscle strengthening (Counting activites using body weight)\nmuscleStrength <- as.data.frame(as.matrix(brfss$strength))  #convert monthly to weekly frequency\n\nmnthStrength <- muscleStrength %>%\n  filter(V1 >= 200) %>%\n  mutate(endurance = as.numeric(substring(V1,2,3))/4) \n\nwkStrength <- muscleStrength %>%\n  filter(V1 < 200) %>%\n  mutate(endurance = as.numeric(substring(V1,2,3)))\n\nmuscleStrength$endurance <- mnthStrength$endurance[match(muscleStrength$V1, mnthStrength$V1)]\n\ncolnames(muscleStrength) <- c(\"compressed labels\", \"endurance\")\n\nmuscleStrength$endurance <- ifelse(is.na(muscleStrength$endurance), wkStrength$endurance[match(muscleStrength$`compressed labels`, wkStrength$V1)], \n                           mnthStrength$endurance[match(muscleStrength$`compressed labels`, mnthStrength$V1)]) \n\nmuscleStrength$endurance[muscleStrength$`compressed labels` == 888] <- 0\nmuscleStrength$endurance[muscleStrength$`compressed labels` == 777] <- NA  \nmuscleStrength$endurance[muscleStrength$`compressed labels` == 999] <- NA   \nbrfss$muscleEndurance <- muscleStrength$endurance #how many times per week did you partake in your secondary activity or excercise ?\n\n#no 2015 sleep except in anxiety and depression module\n\n\n\n\n\n\nbrfss$genhlth <- factor(brfss$genhlth, levels = c(1,2,3,4,5), labels = c('excellent', 'very good', 'good','fair', \n                                                                         'poor' ))\nbrfss$genhlth[brfss$genhlth == 7] <- NA\nbrfss$genhlth[brfss$genhlth == 9] <- NA#in general how is health?\n\nbrfss$physhlth <- as.numeric(brfss$physhlth)\nbrfss$physhlth[brfss$physhlth == 88] <- 0\nbrfss$physhlth[brfss$physhlth == 77] <- NA\nbrfss$physhlth[brfss$physhlth == 99] <- NA #num of days phys health not good in the past 30 days\n\nbrfss$menthlth <- as.numeric(brfss$menthlth)\nbrfss$menthlth[brfss$menthlth == 88] <- 0\nbrfss$menthlth[brfss$menthlth == 77] <- NA\nbrfss$menthlth[brfss$menthlth == 99] <- NA #num of days ment health not good in the past 30 days\n\nbrfss$persdoc2 <- factor(brfss$persdoc2, levels = c(1,2,3), labels = c('yes', '> 1', 'no'))\nbrfss$persdoc2[brfss$persdoc2 == 7] <- NA\nbrfss$persdoc2[brfss$persdoc2 == 9] <- NA   #PCP?\n\nbrfss$medcost <- factor(brfss$medcost, levels = c(1,2), labels = c('yes',  'no'))\nbrfss$medcost[brfss$medcost == 7] <- NA\nbrfss$medcost[brfss$medcost == 9] <- NA  #cost barrier discourage doc visit\n\nbrfss$checkup1 <- factor(brfss$checkup1, levels = c(1,2,3,4,8), labels = c('1 year' ,'2 years',\n                                                                           '5 years', '>5 years', \n                                                                           'never' ))\nbrfss$checkup1[brfss$checkup1 == 7] <- NA\nbrfss$checkup1[brfss$checkup1 == 9] <- NA  #how long since doc visit for checkup\n\n\nbrfss$cvdinfr4 <- factor(brfss$cvdinfr4, levels = c(1,2), labels = c('yes',  'no'))\nbrfss$cvdinfr4[brfss$cvdinfr4 == 7] <- NA\nbrfss$cvdinfr4[brfss$cvdinfr4 == 9] <- NA #has doc told you you had a heart attack of some kind?\n\nbrfss$cvdcrhd4<- factor(brfss$cvdcrhd4, levels = c(1,2), labels = c('yes',  'no'))\nbrfss$cvdcrhd4[brfss$cvdcrhd4 == 7] <- NA\nbrfss$cvdcrhd4[brfss$cvdcrhd4 == 9] <- NA #has doc told you you had angina or coronary heart disease?\n\nbrfss$cvdstrk3 <- factor(brfss$cvdstrk3, levels = c(1,2), labels = c('yes',  'no'))\nbrfss$cvdstrk3[brfss$cvdstrk3 == 7] <- NA\nbrfss$cvdstrk3[brfss$cvdstrk3 == 9] <- NA #has doc told you you had a stroke?\n\n\nbrfss$diabete3 <- factor(brfss$diabete3, levels = c(1,2,3,4), labels = c('yes',  'yes/pregnancy', 'no', \n                                                                         'borderline/pre-diabetes'))\nbrfss$diabete3[brfss$diabete3 == 7] <- NA\nbrfss$diabete3[brfss$diabete3 == 9] <- NA #doc diagnose you with diabetes\n\nbrfss$prediab1 <- factor(brfss$prediab1, levels = c(1,2,3), labels = c('yes',  'yes/pregnancy', 'no'))\nbrfss$prediab1[brfss$prediab1 == 7] <- NA\nbrfss$prediab1[brfss$prediab1 == 9] <- NA #doc diagnose you with pre-diabetes or borderline\n\nbrfss$insulin <- factor(brfss$insulin, levels = c(1,2), labels = c('yes', 'no'))\nbrfss$insulin[brfss$insulin == 9] <- NA #are you taking insulin ?\n\n\nbrfss$eyeexam <- factor(brfss$eyeexam, levels = c(1,2,3,4,8), labels = c(' 1 month',  ' 1 year', '2 years', \n                                                                         '>2 years', 'never'))\n\nbrfss$eyeexam[brfss$eyeexam == 7] <- NA\nbrfss$eyeexam[brfss$eyeexam == 9] <- NA #last eye exam w/ dilation\n\n\n\nbrfss$bldsugar <- as.numeric(brfss$bldsugar)\nbrfss$bldsugar[brfss$bldsugar == 888] <- 0\nbrfss$bldsugar[brfss$bldsugar == 777] <- NA\nbrfss$bldsugar[brfss$bldsugar == 999] <- NA  #how often do you check your glucose ?\n\nbrfss$feetchk2 <- as.numeric(brfss$feetchk2)\nbrfss$feetchk2[brfss$feetchk2 == 555] <- 'No feet'\nbrfss$feetchk2[brfss$feetchk2 == 888] <- 0\nbrfss$feetchk2[brfss$feetchk2 == 777] <- NA\nbrfss$feetchk2[brfss$feetchk2 == 999] <- NA #how often do you check your feet for sores ?\n\nbrfss$doctdiab <- as.numeric(brfss$doctdiab)\nbrfss$doctdiab[brfss$doctdiab == 88] <- 0\nbrfss$doctdiab[brfss$doctdiab == 77] <- NA\nbrfss$doctdiab[brfss$doctdiab == 99] <- NA  #how many times have you been to the doctor for diabetes within 1 year ?\n\nbrfss$chkhemo3 <- as.numeric(brfss$chkhemo3)\nbrfss$chkhemo3[brfss$chkhemo3 == 88] <- 0\nbrfss$chkhemo3[brfss$chkhemo3 == 77] <- NA\nbrfss$chkhemo3[brfss$chkhemo3 == 99] <- NA  #how many times has A one C been check within a year ?\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n#Estimated smoking days based on age range\nsmokeEveryDay <- brfss %>%\n  filter(smokday2 == 1 & avgAgerElders == c(66.75,72,76.75,78.74)) %>%\n  mutate(smokeDays = round((avgAgerElders-18) * 365))\n\nsmokeSomeDay <- brfss %>%\n  filter(smokday2 == 2 & avgAgerElders == c(66.75,72,76.75,78.74)) %>%\n  mutate(smokeDays = round((100/(avgAgerElders-18) ) * 365))\n\nbrfss$smokeDays <- smokeSomeDay$smokeDays[match(brfss$avgAgerElders, smokeSomeDay$avgAgerElders)]\n\nbrfss$smokeDays <- ifelse(is.na(brfss$smokeDays),smokeEveryDay$smokeDays[match(brfss$avgAgerElders, smokeEveryDay$avgAgerElders)],\n                           smokeSomeDay$smokeDays[match(brfss$avgAgerElders, smokeSomeDay$avgAgerElders)])\n\nbrfss$smokeDays[brfss$smokday2 == 3] <- 0\nbrfss$smokeDays[brfss$smokday2 == 7] <- NA\nbrfss$smokeDays[brfss$smokday2 == 9] <- NA #how many estimated days you smoked in your life to date?\n\n\n\n\nbrfss$smoke100 <- factor(brfss$smoke100, levels = c(1,2), labels = c('yes', 'no'))\nbrfss$smoke100[brfss$smoke100 == 7] <- NA\nbrfss$smoke100[brfss$smoke100 == 9] <- NA #have you smoke at least 100 cigarettes in your life ?\n\nbrfss$stopsmk2 <- factor(brfss$stopsmk2, levels = c(1,2), labels = c('yes', 'no'))\nbrfss$stopsmk2[brfss$stopsmk2 == 7] <- NA\nbrfss$stopsmk2[brfss$stopsmk2 == 9] <- NA #have you stopped smoking for one day or longer to quit ?\n\n#brfss$lastsmk2 <- factor(brfss$lastsmk2, levels = c(1,2,3,4,5,6,7,8), labels = c('< 1 month', 'within 3 months',\n                                                                                 #'within past year', 'within past 5 years', \n                                                                                 #'within oast 10 years', '10 years or more',\n                                                                                 #'never smoked regulary'))\n\n#occasional smokers average 100 days in a lifetime\nbrfss$quitDays <- ifelse(brfss$lastsmk2 == 8, (100/(brfss$avgAgerElders-18))* 365, NA) \nbrfss$quitDays[brfss$lastsmk2 == 1] <- 30\nbrfss$quitDays[brfss$lastsmk2 == 2] <- 91\nbrfss$quitDays[brfss$lastsmk2 == 3] <- 183\nbrfss$quitDays[brfss$lastsmk2 == 4] <- 365\nbrfss$quitDays[brfss$lastsmk2 == 5] <- 1825\nbrfss$quitDays[brfss$lastsmk2 == 6] <- 3650\nbrfss$quitDays[brfss$lastsmk2 == 7] <- 5475\nbrfss$quitDays[brfss$lastsmk2 == 77] <- NA\nbrfss$quitDays[brfss$lastsmk2 == 99] <- NA # how many estimated days since you've smoked ?\n\n#estimated days chewing tobacco \nchewEveryDay <- brfss %>%\n  filter(usenow3 == 1 & avgAgerElders == c(66.75,72,76.75,78.74)) %>%\n  mutate(chewerDays = round( (avgAgerElders-18) * 365) )\n  \nchewSomeDay <- brfss %>%\n  filter(usenow3 == 2 & avgAgerElders == c(66.75,72,76.75,78.74)) %>%\n  mutate(chewerDays = round((100/(avgAgerElders - 18) ) * 365) )\n  \nbrfss$chewerDays <- chewEveryDay$chewerDays[match(brfss$avgAgerElders, chewEveryDay$avgAgerElders)]\n\nbrfss$chewerDays <- ifelse(is.na(brfss$chewerDays),chewSomeDay$chewerDays[match(brfss$avgAgerElders, chewSomeDay$avgAgerElders)],\n                           chewEveryDay$chewerDays[match(brfss$avgAgerElders, chewEveryDay$avgAgerElders)])\n\nbrfss$chewerDays[brfss$usenow3 == 3] <- 0\nbrfss$chewerDays[brfss$usenow3 == 7] <- NA\nbrfss$chewerDays[brfss$usenow3 == 9] <- NA #estimated days of chew tabacco or snuff in lifetime ?\n\n\n\n#Alcohol consumption on a weekly basis  \n\nalchConsume <- as.data.frame(as.matrix(brfss_4$alcday5))  #convert monthly to weekly frequency\n\nmnthConsume <- alchConsume %>%\n  filter(V1 >= 200) %>%\n  mutate(consumption = as.numeric(substring(V1,2,3))/4) \n\nwkConsume <- alchConsume %>%\n  filter(V1 < 200) %>%\n  mutate(consumption = as.numeric(substring(V1,2,3)))\n\nalchConsume$consumption <- mnthConsume$consumption[match(alchConsume$V1, mnthConsume$V1)] \n\ncolnames(alchConsume) <- c(\"compressed labels\", \"consumption\")\n\nalchConsume$consumption <- ifelse(is.na(alchConsume$consumption), wkConsume$consumption[match(alchConsume$`compressed labels`, wkConsume$V1)], \n                                  mnthConsume$consumption[match(alchConsume$`compressed labels`, mnthConsume$V1)]) \n\nalchConsume$consumption[alchConsume$`compressed labels` == 888] <- 0\nalchConsume$consumption[alchConsume$`compressed labels` == 777] <- NA  \nalchConsume$consumption[alchConsume$`compressed labels` == 999] <- NA   \nbrfss_4$alchConsumeWkly <- alchConsume$consumption #num of times you consume alcohol within a week \n\n\n\nbrfss$avedrnk2[brfss$avedrnk2 == 77] <- NA\nbrfss$avedrnk2[brfss$avedrnk2 == 99] <- NA \nbrfs$avedrnk2 <-  as.numeric(brfss$avedrnk2)/4 #weekly consumption of hard alcohol\n\n\nbrfss$drnk3ge5[brfss$drnk3ge5 == 77] <- NA\nbrfss$drnk3ge5[brfss$drnk3ge5 == 99] <- NA \nbrfs$drnk3ge5 <-  as.numeric(brfss$drnk3ge5)/4 #weekly hard alcohol comsumption of  5 drinks or more\n\n\nbrfss$maxdrnks[brfss$maxdrnks == 77] <- NA\nbrfss$maxdrnks[brfss$maxdrnks == 99] <- NA \nbrfss$maxdrnks <-  as.numeric(brfss$maxdrnks)/4 #weekly consumption equivalent of largest amount of hard alcohol on any occasion (converted -- in the past 30 days)\n\n\n\n#Fruit juice (actual) weekly consumption\nfruitJuiceConsume <- as.data.frame(as.matrix(brfss$fruitju1))  #convert monthly & daily to weekly frequency\n\nmnthFruitJuConsume <- fruitJuiceConsume %>%\n  filter(V1 >= 300) %>%\n  mutate(juicing = as.numeric(substring(V1,2,3))/4)\n\nwkFruitJuConsume <- fruitJuiceConsume %>%\n  filter(V1 < 300) %>%\n  mutate(juicing = ifelse(V1 <= 199, as.numeric(substring(V1,2,3))*7, as.numeric(substring(V1,2,3)) ))\n\nfruitJuiceConsume$juicing <- mnthFruitJuConsume$juicing[match(fruitJuiceConsume$V1, mnthFruitJuConsume$V1)]\n\ncolnames(fruitJuiceConsume) <- c(\"compressed labels\", \"juicing\")\n\nfruitJuiceConsume$juicing <- ifelse(is.na(fruitJuiceConsume$juicing), wkFruitJuConsume$juicing[match(fruitJuiceConsume$`compressed labels`, wkFruitJuConsume$V1)], \n                                  mnthFruitJuConsume$juicing[match(fruitJuiceConsume$`compressed labels`, mnthFruitJuConsume$V1)]) \n\nfruitJuiceConsume$juicing[fruitJuiceConsume$`compressed labels` == 555] <- 0\nfruitJuiceConsume$juicing[fruitJuiceConsume$`compressed labels` == 777] <- NA \nfruitJuiceConsume$juicing[fruitJuiceConsume$`compressed labels` == 999] <- NA\nbrfss$fruitJuConsumeWkly <- fruitJuiceConsume$juicing   #approx weekly comsumption of fruit juice\n\n\n\n\n\n#Piece of fruit weekly consumption\nfruitConsume <- as.data.frame(as.matrix(brfss$fruit1))  #convert monthly & daily to weekly frequency\n\nmnthFruitConsume <- fruitConsume %>%\n  filter(V1 >= 300) %>%\n  mutate(fruits = as.numeric(substring(V1,2,3))/4)\n\nwkFruitConsume <- fruitConsume %>%\n  filter(V1 < 300) %>%\n  mutate(fruits = ifelse(V1 <= 199, as.numeric(substring(V1,2,3))*7, as.numeric(substring(V1,2,3)) ))\n\nfruitConsume$fruits <- mnthFruitConsume$fruits[match(fruitConsume$V1, mnthFruitConsume$V1)]\n\ncolnames(fruitConsume) <- c(\"compressed labels\", \"fruits\")\n\nfruitConsume$fruits <- ifelse(is.na(fruitConsume$fruits), wkFruitConsume$fruits[match(fruitConsume$`compressed labels`, wkFruitConsume$V1)], \n                                    mnthFruitConsume$fruits[match(fruitConsume$`compressed labels`, mnthFruitConsume$V1)]) \n\nfruitConsume$fruits[fruitConsume$`compressed labels` == 555] <- 0\nfruitConsume$fruits[fruitConsume$`compressed labels` == 777] <- NA\nfruitConsume$fruits[fruitConsume$`compressed labels` == 999] <- NA\nbrfss$fruitConsumeWkly <- fruitConsume$fruits #how often do you eat fresh fruit during the week\n\n\n#Beans weekly Consumptions\nbeansConsume <- as.data.frame(as.matrix(brfss$fvbeans))  #convert monthly & daily to weekly frequency\n\nmnthBeansConsume <- beansConsume %>%\n  filter(V1 >= 300) %>%\n  mutate(beans = as.numeric(substring(V1,2,3))/4)\n\nwkBeansConsume <- beansConsume %>%\n  filter(V1 < 300) %>%\n  mutate(beans = ifelse(V1 <= 199, as.numeric(substring(V1,2,3))*7, as.numeric(substring(V1,2,3)) ))\n\nbeansConsume$beans <- mnthBeansConsume$fruits[match(beansConsume$V1, mnthBeansConsume$V1)]\n\ncolnames(beansConsume) <- c(\"compressed labels\", \"beans\")\n\nbeansConsume$beans <- ifelse(is.na(beansConsume$beans), wkBeansConsume$beans[match(beansConsume$`compressed labels`, wkBeansConsume$V1)], \n                              mnthBeansConsume$beans[match(beansConsume$`compressed labels`, mnthBeansConsume$V1)]) \n\nbeansConsume$beans[beansConsume$`compressed labels` == 555] <- 0\nbeansConsume$beans[beansConsume$`compressed labels` == 777] <- NA\nbeansConsume$beans[beansConsume$`compressed labels` == 999] <- NA\nbrfss$beansConsumeWkly <- beansConsume$beans #how often do you eat cooked or canned beans ?\n\n#Greens veggies weekly\ngreensConsume <- as.data.frame(as.matrix(brfss$fvgreen))  #convert monthly & daily to weekly frequency\n\nmnthGreensConsume <- greensConsume %>%\n  filter(V1 >= 300) %>%\n  mutate(greens = as.numeric(substring(V1,2,3))/4)\n\nwkGreensConsume <- greensConsume %>%\n  filter(V1 < 300) %>%\n  mutate(greens = ifelse(V1 <= 199, as.numeric(substring(V1,2,3))*7, as.numeric(substring(V1,2,3)) ))\n\ngreensConsume$greens <- mnthGreensConsume$greens[match(greensConsume$V1, mnthGreensConsume$V1)]\n\ncolnames(greensConsume) <- c(\"compressed labels\", \"greens\")\n\ngreensConsume$greens <- ifelse(is.na(greensConsume$greens), wkGreensConsume$greens[match(greensConsume$`compressed labels`, wkGreensConsume$V1)], \n                             mnthGreensConsume$greens[match(greensConsume$`compressed labels`, mnthGreensConsume$V1)]) \n\ngreensConsume$greens[greensConsume$`compressed labels` == 555] <- 0\ngreensConsume$greens[greensConsume$`compressed labels` == 777] <- NA\ngreensConsume$greens[greensConsume$`compressed labels` == 999] <- NA\nbrfss$greensConsumeWkly <- greensConsume$greens   #how often do you eat green veggies during the week ?\n\n\n#orange veggies weekly consumptions\norangeConsume <- as.data.frame(as.matrix(brfss$fvorang))  #convert monthly & daily to weekly frequency\n\nmnthOrangeConsume <- orangeConsume %>%\n  filter(V1 >= 300) %>%\n  mutate(orange = as.numeric(substring(V1,2,3))/4)\n\nwkOrangeConsume <- orangeConsume %>%\n  filter(V1 < 300) %>%\n  mutate(orange = ifelse(V1 <= 199, as.numeric(substring(V1,2,3))*7, as.numeric(substring(V1,2,3)) ))\n\norangeConsume$orange <- mnthOrangeConsume$orange[match(orangeConsume$V1, mnthOrangeConsume$V1)]\n\ncolnames(orangeConsume) <- c(\"compressed labels\", \"orange\")\n\norangeConsume$orange <- ifelse(is.na(orangeConsume$orange), wkOrangeConsume$orange[match(orangeConsume$`compressed labels`, wkOrangeConsume$V1)], \n                               mnthOrangeConsume$orange[match(orangeConsume$`compressed labels`, mnthOrangeConsume$V1)]) \norangeConsume$orange[orangeConsume$`compressed labels` == 555] <- 0\norangeConsume$orange[orangeConsume$`compressed labels` == 777] <- NA\norangeConsume$orange[orangeConsume$`compressed labels` == 999] <- NA\nbrfss$orangeConsumeWkly <- orangeConsume$orange  #how often do you eat orange veggies during the week ?\n\n\n#Other veggies besides previous mentions weekly consumptions \notherVegConsume <- as.data.frame(as.matrix(brfss$vegetab1))  #convert monthly & daily to weekly frequency\n\nmnthOtherVegConsume <- otherVegConsume %>%\n  filter(V1 >= 300) %>%\n  mutate(veggies = as.numeric(substring(V1,2,3))/4)\n\nwkOtherVegConsume <- otherVegConsume %>%\n  filter(V1 < 300) %>%\n  mutate(veggies = ifelse(V1 <= 199, as.numeric(substring(V1,2,3))*7, as.numeric(substring(V1,2,3)) ))\n\notherVegConsume$veggies <- mnthOtherVegConsume$veggies[match(otherVegConsume$V1, mnthOtherVegConsume$V1)]\n\ncolnames(otherVegConsume) <- c(\"compressed labels\", \"veggies\")\n\notherVegConsume$veggies <- ifelse(is.na(otherVegConsume$veggies), wkOtherVegConsume$veggies[match(otherVegConsume$`compressed labels`, wkOtherVegConsume$V1)], \n                               mnthOtherVegConsume$veggies[match(otherVegConsume$`compressed labels`, mnthOtherVegConsume$V1)]) \notherVegConsume$veggies[otherVegConsume$`compressed labels` == 555] <- 0\notherVegConsume$veggies[otherVegConsume$`compressed labels` == 777] <- NA\notherVegConsume$veggies[otherVegConsume$`compressed labels` == 999] <- NA\nbrfss$otherVegConsumeWkly <- otherVegConsume$veggies #how often do you eat other non-fried or non-baked veggies ?\n\n\nbrfss$wtchsalt <- factor(brfss$wtchsalt, levels = c(1,2), labels = c('yes', 'no'))\nbrfss$wtchsalt[brfss$wtchsalt == 7] <- NA\nbrfss$wtchsalt[brfss$wtchsalt == 9] <- NA  #Are you watching your salt ?\n\n\n#Number of days you've watched your salt\nbrfss$avgAgerElders[brfss$x.ageg5yr == 10 ] <- 66.75 \nbrfss$avgAgerElders[brfss$x.ageg5yr == 11 ] <- 72 \nbrfss$avgAgerElders[brfss$x.ageg5yr == 12 ] <- 76.75\nbrfss$avgAgerElders[brfss$x.ageg5yr == 13 ] <- 78.74  #avg age for elders to calculate 'all my life' sodium watch levels\n\nsaltFreeConsume <- as.data.frame(as.matrix(brfss_3$longwtch))  #convert monthly & daily to weekly frequency\nsaltFreeConsume <- cbind(saltFreeConsume, brfss_3$avgAgerElders) #taken from 14-level age category\ncolnames(saltFreeConsume) <- c('V1', 'elderAvg')\n\nmnthSaltFreeConsume <- saltFreeConsume %>%\n     filter(V1 >= 300) %>%\n     mutate(sodium = ifelse(V1 < 500, round(as.numeric(substring(V1,2,3))*365), \n                                   round(as.numeric(substring(V1,2,3))*30.417)) )\n\nwkSaltFreeConsume <- saltFreeConsume %>%\n  filter(V1 < 300) %>%\n  mutate(sodium = ifelse(V1 <= 199, as.numeric(substring(V1,2,3)), round(as.numeric(substring(V1,2,3))*7.019) )) \n\n\nsaltFreeConsume$sodium <- wkSaltFreeConsume$sodium[match(saltFreeConsume$V1, wkSaltFreeConsume$V1)]\n\n\nsaltFreeConsume$sodium <- ifelse(saltFreeConsume$V1 == 555 & saltFreeConsume$elderAvg == c(66.75, 72, 76.75, 78.74),\n                                 saltFreeConsume$elderAvg * 365, ifelse(is.na(saltFreeConsume$sodium), mnthSaltFreeConsume$sodium[match(saltFreeConsume$V1, mnthSaltFreeConsume$V1)], \n                                                                        wkSaltFreeConsume$sodium[match(saltFreeConsume$V1, wkSaltFreeConsume$V1)]) )\nsaltFreeConsume$sodium[saltFreeConsume$V1 == 777] <- NA\nsaltFreeConsume$sodium[saltFreeConsume$V1 == 999] <- NA\nbrfss_3$sodiumSaltWatchDays <- saltFreeConsume$sodium # how many days have you've been watching sodium intake ?\n\n\n\nbrfss$dradvise <- factor(brfss$dradvise, levels = c(1,2), labels = c('yes', 'no'))\nbrfss$dradvise[brfss$dradvise == 7] <- NA\nbrfss$dradvise[brfss$dradvise == 9] <- NA  #has a doctor advised you to reduce your sodium or salt intake\n\n\n\n##################################################################################\n\n#Transformed compressed height into feet & inches then into calculated meters\nheight <- as.data.frame(as.matrix(brfss$height3))\n\nin_m_filter <- height %>%\n  filter(V1 < 712) %>%\n  mutate(feet = substring(V1, 1, 1)) %>%\n  mutate(inches = substring(V1, 2, nchar(V1))) %>%\n  mutate(meters = ifelse(inches > 12, NaN, (as.numeric(substring(V1, 2, nchar(V1))) + \n                                              as.numeric(substring(V1, 1, 1)) * 12) * 0.0254)) \nm_filter <- height %>%\n    filter(V1 > 712 & V1 < 9999 & V1 >= 9000  & metric) %>%\n  mutate(meters = as.numeric( substring(V1, 2,2)) + (as.numeric(substring(V1, 3, nchar(V1))) * 0.01))  %>%\n  mutate(meters = replace(meters, meters == 0, NaN))\n           \n#meters \nheight$meters <- m_filter$meters[match(height$V1, m_filter$V1)]\n\ncolnames(height) <- c(\"compressed\", \"meters\")\n\n\nheight$meters <- ifelse(is.na(height$meters), in_m_filter$meters[match(height$compressed, in_m_filter$V1)], \n                        m_filter$meters[match(height$compressed, m_filter$V1)])\n\n\nheight$meters <- as.numeric(height$meters) #/ 0.01 for centimenters\n###################################################\ntoy4Baby <- height %>%\n  filter(compressed < 712) %>%\n  mutate(feet = substring(compressed, 1, 1)) %>%\n  mutate(inches = substring(compressed, 2, nchar(compressed))) \n  \ntoy4Baby <- cbind(toy4Baby, weight[1:396908,])\n\ntoy4Baby$bmi <- round(as.numeric(toy4Baby$kg) / (as.numeric(toy4Baby$meters)^2), 1)\n\ntoy4Baby$Class[toy4Baby$bmi < 10 | toy4Baby$bmi < 200] <-  NA\ntoy4Baby$Class[toy4Baby$bmi > 10 & toy4Baby$bmi < 14.9 ] <- \"very severely underweight\"\ntoy4Baby$Class[toy4Baby$bmi > 15 & toy4Baby$bmi < 15.9] <- \"severly underweight\"\ntoy4Baby$Class[toy4Baby$bmi > 16 & toy4Baby$bmi < 18.4] <- \"underweight\"\ntoy4Baby$Class[toy4Baby$bmi > 18.5 & toy4Baby$bmi < 24.9] <- \"normal\"\ntoy4Baby$Class[toy4Baby$bmi > 25 & toy4Baby$bmi < 29.9] <- \"overweight\"\ntoy4Baby$Class[toy4Baby$bmi > 30 & toy4Baby$bmi < 34.9] <- \"obese class I\"\ntoy4Baby$Class[toy4Baby$bmi > 35 & toy4Baby$bmi < 39.9] <- \"obese class II\"\ntoy4Baby$Class[toy4Baby$bmi >= 40] <- \"obese class III\"\n\ntoy4Baby$Class <- replace(toy4Baby$Class, is.na(toy4Baby$Class), \"overweight\")\n####################################################\n\n###Transformed weight (lbs) into kg\nweight <- as.data.frame(as.matrix(brfss$weight2))\nmax_weight <- 999\n\nkg_filter <- weight %>%\n  filter(V1 < max_weight) %>%\n  mutate(kg = V1 * 0.453592)\n\nkg_sub_filter <- weight %>%\n  filter(V1 < 9999 & metric) %>%\n  mutate(kg = substring(V1, 2, nchar(V1))) \n\nweight$kg <- ifelse(weight$V1 < max_weight, kg_filter$kg[match(weight$V1, kg_filter$V1)]  , ifelse( weight$V1 < 9999 & metric,\n                    kg_sub_filter$kg[match(weight$V1, kg_sub_filter$V1)], NaN) )\n\ncolnames(weight) <- c(\"pounds (lbs)\", \"kg\")\n\n\nbmi <- as.data.frame(round(as.numeric(weight$kg) / (as.numeric(height$meters)^2), 1))\ncolnames(bmi) <- \"bmiCalc\"\n\n\n#BMI weight-class labels\n\nbmi$Class[bmi$bmiCalc < 10 | bmi$bmiCalc < 200] <-  NA\nbmi$Class[bmi$bmiCalc > 10 & bmi$bmiCalc < 14.9 ] <- \"very severely underweight\"\nbmi$Class[bmi$bmiCalc > 15 & bmi$bmiCalc < 15.9] <- \"severely underweight\"\nbmi$Class[bmi$bmiCalc > 16 & bmi$bmiCalc < 18.4] <- \"underweight\"\nbmi$Class[bmi$bmiCalc > 18.5 & bmi$bmiCalc < 24.9] <- \"normal\"\nbmi$Class[bmi$bmiCalc > 25 & bmi$bmiCalc < 29.9] <- \"overweight\"\nbmi$Class[bmi$bmiCalc > 30 & bmi$bmiCalc < 34.9] <- \"obese class I\"\nbmi$Class[bmi$bmiCalc > 35 & bmi$bmiCalc < 39.9] <- \"obese class II\"\nbmi$Class[bmi$bmiCalc >= 40] <- \"obese class III\"\n\nbmi$Class <- replace(bmi$Class, is.na(bmi$Class), \"overweight\")\n\n#cbind bmi into \"clean\" survey variables of interest\nbrfss <- cbind(brfss, bmi)\n\n#unclass labels\nbrfss_replaced[] <- lapply(brfss_replaced, unclass)\n\n#Take what's needed from brfss\n\n\nbrfss_anal <- as.data.frame(with(brfss_replaced, cbind(income2, x.race, x.state, x.age65yr, marital, sex, height3, \n                                         weight2, bmiCalc, Class, physhlth, menthlth, persdoc2, medcost, \n                                         checkup1, exerany2, smokday2, alcday5, diabete3)))\n\n\n  \n",
    "created" : 1506884907891.000,
    "dirty" : true,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "2764387924",
    "id" : "49DA5920",
    "lastKnownWriteTime" : 1505086696,
    "last_content_update" : 1506905602727,
    "path" : "C:/Coursera/spearDrugDisease.R",
    "project_path" : null,
    "properties" : {
        "source_window_id" : ""
    },
    "relative_order" : 6,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}